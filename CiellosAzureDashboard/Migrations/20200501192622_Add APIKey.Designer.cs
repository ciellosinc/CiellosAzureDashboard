// <auto-generated />
using System;
using CiellosAzureDashboard.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CiellosAzureDashboard.Migrations
{
    [DbContext(typeof(CADContext))]
    [Migration("20200501192622_Add APIKey")]
    partial class AddAPIKey
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("CiellosAzureDashboard.Model.ActiveVM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DashboardId");

                    b.Property<string>("VMId");

                    b.HasKey("Id");

                    b.ToTable("ActiveVMs");
                });

            modelBuilder.Entity("CiellosAzureDashboard.Model.Application", b =>
                {
                    b.Property<int>("AppId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClientId");

                    b.Property<string>("ClientSecret");

                    b.Property<string>("Description");

                    b.Property<string>("SubscriptionId");

                    b.Property<string>("TenantId");

                    b.Property<string>("Thumbprint");

                    b.HasKey("AppId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("CiellosAzureDashboard.Model.Dashboard", b =>
                {
                    b.Property<int>("DashboardId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DashboardAnonAccessCode");

                    b.Property<string>("DashboardLogoUrl");

                    b.Property<string>("DashboardName");

                    b.Property<int>("DisplayType");

                    b.HasKey("DashboardId");

                    b.ToTable("Dashboards");
                });

            modelBuilder.Entity("CiellosAzureDashboard.Model.DashboardApplication", b =>
                {
                    b.Property<int>("DashboardId");

                    b.Property<int>("ApplicationId");

                    b.HasKey("DashboardId", "ApplicationId");

                    b.HasAlternateKey("ApplicationId", "DashboardId");

                    b.ToTable("DashboardApplication");
                });

            modelBuilder.Entity("CiellosAzureDashboard.Model.Link", b =>
                {
                    b.Property<int>("linkId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DashboardId");

                    b.Property<string>("linkName");

                    b.Property<string>("linkUrl");

                    b.HasKey("linkId");

                    b.HasIndex("DashboardId");

                    b.ToTable("Link");
                });

            modelBuilder.Entity("CiellosAzureDashboard.Model.Log", b =>
                {
                    b.Property<int>("logId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("city");

                    b.Property<string>("country");

                    b.Property<string>("ip");

                    b.Property<string>("key");

                    b.Property<string>("name");

                    b.Property<string>("region");

                    b.Property<string>("resourcegroup");

                    b.Property<string>("subscription");

                    b.Property<DateTime>("timestamp");

                    b.Property<string>("vmname");

                    b.HasKey("logId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("CiellosAzureDashboard.Model.ScheduleVM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ScheduleId");

                    b.Property<int?>("SchedulesId");

                    b.Property<int>("VMId");

                    b.HasKey("Id");

                    b.HasIndex("SchedulesId");

                    b.HasIndex("VMId");

                    b.ToTable("ScheduleVM");
                });

            modelBuilder.Entity("CiellosAzureDashboard.Model.Schedules", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<TimeSpan>("StartTime");

                    b.Property<TimeSpan>("StopTime");

                    b.HasKey("Id");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("CiellosAzureDashboard.Model.Setting", b =>
                {
                    b.Property<int>("settingId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("MaxNumEventsLogStorePerVM");

                    b.Property<string>("apiKeyString");

                    b.Property<string>("certificateThumbprintStr");

                    b.HasKey("settingId");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("CiellosAzureDashboard.Model.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("DashboardId");

                    b.Property<bool>("IsSuperUser");

                    b.Property<string>("UserName");

                    b.Property<bool>("UserStatus");

                    b.HasKey("UserId");

                    b.HasIndex("DashboardId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CiellosAzureDashboard.Model.VM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ApplicationId");

                    b.Property<string>("PowerState");

                    b.Property<string>("ProvisioningState");

                    b.Property<string>("ResourceGroupName");

                    b.Property<string>("SubscriptionId");

                    b.Property<string>("Tags");

                    b.Property<string>("VMId");

                    b.Property<string>("VMName");

                    b.Property<string>("VMSize");

                    b.HasKey("Id");

                    b.ToTable("VMs");
                });

            modelBuilder.Entity("CiellosAzureDashboard.Model.DashboardApplication", b =>
                {
                    b.HasOne("CiellosAzureDashboard.Model.Application", "Application")
                        .WithMany("DashboardApplications")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CiellosAzureDashboard.Model.Dashboard", "Dashboard")
                        .WithMany("DashboardApplications")
                        .HasForeignKey("DashboardId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CiellosAzureDashboard.Model.Link", b =>
                {
                    b.HasOne("CiellosAzureDashboard.Model.Dashboard", "Dashboard")
                        .WithMany("Links")
                        .HasForeignKey("DashboardId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CiellosAzureDashboard.Model.ScheduleVM", b =>
                {
                    b.HasOne("CiellosAzureDashboard.Model.Schedules", "Schedules")
                        .WithMany("ScheduleVMsList")
                        .HasForeignKey("SchedulesId");

                    b.HasOne("CiellosAzureDashboard.Model.VM", "VM")
                        .WithMany()
                        .HasForeignKey("VMId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CiellosAzureDashboard.Model.User", b =>
                {
                    b.HasOne("CiellosAzureDashboard.Model.Dashboard", "Dashboard")
                        .WithMany()
                        .HasForeignKey("DashboardId");
                });
#pragma warning restore 612, 618
        }
    }
}
